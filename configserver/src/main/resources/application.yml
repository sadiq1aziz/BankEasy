spring:
  application:
    name: "configserver"
  profiles:
#    active: native
     active: git
  cloud:
    config:
      server:
#        Here we use native props to define local system config loctions
#        native:
#          search-locations: "classpath:/config"
         git:
           uri: "https://github.com/sadiq1aziz/bankeasy-config.git"
#             default branch
           default-label: main
#             ensure that the github repo is cloned on application start
#             rather than at time of request to the server from microservice app
           clone-on-start: true
#             perform timeout when not able to connect to config server in the fixed duration
           timeout: 5
#             disregard local changes and always refer github repo for configs on start
           force-pull: true
# Config details to connect to rabbit messaging broker
      rabbitmq:
        host: "localhost"
        port: 5672
        username: "guest"
        password: "guest"
# we define below configurations pertaining to the actuator that helps check on health of this MS
# Especially readiness since we need this service to be in optimal state before other MSs start
# Below are the management api config details from the actuator to ensure health check
    management:
      endpoints:
        web:
          exposure:
            include: "*"
      health:
        readiness-state:
          enabled: true
        liveness-state:
          enabled: true
      endpoint:
        health:
          probes:
            enabled: true
server:
  port: 8071

